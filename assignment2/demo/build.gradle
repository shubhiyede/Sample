buildscript {
    ext {
        springBootVersion = '1.2.2.RELEASE'
    }
    repositories {
    	jcenter()
        mavenLocal()
        mavenCentral()
        maven { url "https://repo.spring.io/libs-release" }
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 

jar {
    baseName = 'myvote'
    version = 'v1'
}
sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.spring.io/libs-release" }
    jcenter()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    testCompile("org.springframework.boot:spring-boot-starter-test") 
    compile("com.fasterxml.jackson.core:jackson-databind")
    //compile("javax.validation.constraint")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    testCompile("junit:junit")

    compile ("org.apache.kafka:kafka_2.10:0.8.2.1")
//    compile ("org.springframework:spring-context-support:4.1.5.RELEASE")
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
